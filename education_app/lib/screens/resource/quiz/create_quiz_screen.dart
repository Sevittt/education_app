// lib/screens/resource/quiz/create_quiz_screen.dart

import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../../../models/quiz.dart';
import '../../../services/quiz_service.dart';
import 'add_questions_screen.dart'; // We will create this file next

class CreateQuizScreen extends StatefulWidget {
  const CreateQuizScreen({super.key});

  @override
  State<CreateQuizScreen> createState() => _CreateQuizScreenState();
}

class _CreateQuizScreenState extends State<CreateQuizScreen> {
  final _formKey = GlobalKey<FormState>();
  final _titleController = TextEditingController();
  final _descriptionController = TextEditingController();
  bool _isLoading = false;

  @override
  void dispose() {
    _titleController.dispose();
    _descriptionController.dispose();
    super.dispose();
  }

  // Updated function to save the quiz and navigate
  Future<void> _saveAndAddQuestions() async {
    if (_formKey.currentState!.validate()) {
      setState(() {
        _isLoading = true;
      });

      // Create a Quiz object (without questions for now)
      final newQuiz = Quiz(
        id: '', // Will be generated by Firestore
        title: _titleController.text,
        description: _descriptionController.text,
        resourceId: '', // TODO: Add a way to link this to a resource if needed
        questions: [], // Questions will be added in the next screen
      );

      try {
        final quizService = Provider.of<QuizService>(context, listen: false);
        final newQuizId = await quizService.createQuiz(newQuiz);

        // Navigate to the screen for adding questions
        if (mounted) {
          Navigator.pushReplacement(
            context,
            MaterialPageRoute(
              builder: (context) => AddQuestionsScreen(quizId: newQuizId),
            ),
          );
        }
      } catch (e) {
        setState(() {
          _isLoading = false;
        });
        ScaffoldMessenger.of(
          context,
        ).showSnackBar(SnackBar(content: Text('Failed to create quiz: $e')));
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Create a New Quiz')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: ListView(
            children: [
              TextFormField(
                controller: _titleController,
                decoration: const InputDecoration(
                  labelText: 'Quiz Title',
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter a title.';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 16),
              TextFormField(
                controller: _descriptionController,
                decoration: const InputDecoration(
                  labelText: 'Description',
                  border: OutlineInputBorder(),
                ),
                maxLines: 4,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter a description.';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 24),
              _isLoading
                  ? const Center(child: CircularProgressIndicator())
                  : ElevatedButton.icon(
                    icon: const Icon(Icons.add_task),
                    label: const Text('Save and Add Questions'),
                    onPressed: _saveAndAddQuestions,
                    style: ElevatedButton.styleFrom(
                      padding: const EdgeInsets.symmetric(vertical: 16),
                    ),
                  ),
            ],
          ),
        ),
      ),
    );
  }
}
